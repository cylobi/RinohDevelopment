@model List<RinohDevelopment.ViewModels.CleaningOrderViewModel>
@{
ViewData["Title"] = "سفارش های نظافت من";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>سفارش های نظافت من</h2>
        <a asp-action="CleaningServices" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> سفارش جدید
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
    <div class="alert alert-success mb-4">
        @TempData["SuccessMessage"]
    </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
    <div class="alert alert-danger mb-4">
        @TempData["ErrorMessage"]
    </div>
    }

    @if (!Model.Any())
    {
    <div class="card shadow-sm">
        <div class="card-body text-center py-5">
            <i class="bi bi-inbox fs-1 text-muted mb-3"></i>
            <h5>شما هنوز سفارش نظافتی ثبت نکرده‌اید</h5>
            <p class="text-muted">برای سفارش خدمات نظافت، بر روی دکمه «سفارش جدید» کلیک کنید.</p>
        </div>
    </div>
    }
    else
    {
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="row">
                <div class="col-md-3 fw-bold">نام سرویس</div>
                <div class="col-md-2 fw-bold">تاریخ سرویس</div>
                <div class="col-md-2 fw-bold">قیمت</div>
                <div class="col-md-2 fw-bold">وضعیت</div>
                <div class="col-md-3 fw-bold text-center">عملیات</div>
            </div>
        </div>
        <div class="card-body p-0">
            @foreach (var order in Model)
            {
            <div class="row border-bottom p-3 @GetStatusRowClass(order.Status)">
                <div class="col-md-3">@order.ServiceName</div>
                <div class="col-md-2">@order.ServiceDate.ToString("yyyy/MM/dd")</div>
                <div class="col-md-2">@order.ServicePrice.ToString("N2") میلی‌گرم طلا</div>
                <div class="col-md-2">
                    <span class="badge @GetStatusBadgeClass(order.Status)">@order.StatusDisplay</span>
                </div>
                <div class="col-md-3 text-center">
                    @if (order.Status == OrderStatus.Pending)
                    {
                    <form asp-action="CancelCleaningOrder" method="post" style="display:inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@order.Id" />
                        <button type="submit" class="btn btn-sm btn-danger"
                                onclick="return confirm('آیا از لغو این سفارش اطمینان دارید؟');">
                            <i class="bi bi-x-circle"></i> لغو
                        </button>
                    </form>
                    }
                </div>
            </div>
            }
        </div>
    </div>
    }
</div>

@functions {
string GetStatusBadgeClass(OrderStatus status)
{
return status switch
{
OrderStatus.Pending => "bg-warning",
OrderStatus.Confirmed => "bg-info",
OrderStatus.Completed => "bg-success",
OrderStatus.Cancelled => "bg-secondary",
_ => "bg-secondary"
};
}

string GetStatusRowClass(OrderStatus status)
{
return status switch
{
OrderStatus.Pending => "bg-warning-subtle",
OrderStatus.Confirmed => "bg-info-subtle",
OrderStatus.Completed => "bg-success-subtle",
OrderStatus.Cancelled => "bg-secondary-subtle",
_ => ""
};
}
}