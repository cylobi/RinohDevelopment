@model List<RinohDevelopment.ViewModels.RecyclableRequestListItemViewModel>
@{
ViewData["Title"] = "درخواست‌های من";
Layout = "_UserLayout";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div>درخواست‌های جمع‌آوری بازیافت</div>
        <a asp-action="RequestRecyclablePickup" class="btn btn-sm btn-primary">
            <i class="fa fa-plus ml-1"></i> درخواست جدید
        </a>
    </div>
    <div class="card-body p-0">
        @if (!Model.Any())
        {
        <div class="text-center py-5">
            <i class="fa fa-inbox fa-3x text-muted mb-3"></i>
            <h5>شما هنوز درخواستی ثبت نکرده‌اید</h5>
            <p class="text-muted">برای درخواست جمع‌آوری بازیافت، بر روی دکمه «درخواست جدید» کلیک کنید.</p>
            <a asp-action="RequestRecyclablePickup" class="btn btn-primary mt-2">
                <i class="fa fa-plus ml-1"></i> ثبت درخواست جدید
            </a>
        </div>
        }
        else
        {
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead>
                <tr>
                    <th>تاریخ درخواست</th>
                    <th>زمان جمع‌آوری</th>
                    <th>وضعیت</th>
                    <th>توضیحات</th>
                    <th class="text-center">عملیات</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var request in Model)
                {
                <tr class="@GetStatusRowClass(request.Status)">
                    <td>@request.RequestDate.ToString("yyyy/MM/dd")</td>
                    <td>@request.TimeDisplay</td>
                    <td>
                        <span class="badge @GetStatusBadgeClass(request.Status)">@request.StatusDisplay</span>
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(request.Notes) ? "-" : request.Notes)
                    </td>
                    <td class="text-center">
                        @if (request.Status == RequestStatus.Pending)
                        {
                        <form asp-action="CancelRequest" method="post" style="display:inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@request.Id" />
                            <button type="submit" class="btn btn-sm btn-danger"
                                    onclick="return confirm('آیا از لغو این درخواست اطمینان دارید؟');">
                                <i class="fa fa-times-circle"></i> لغو
                            </button>
                        </form>
                        }
                    </td>
                </tr>
                }
                </tbody>
            </table>
        </div>
        }
    </div>
</div>

@functions {
string GetStatusBadgeClass(RequestStatus status)
{
return status switch
{
RequestStatus.Pending => "badge-warning",
RequestStatus.Confirmed => "badge-info",
RequestStatus.Completed => "badge-success",
RequestStatus.Cancelled => "badge-secondary",
_ => "badge-secondary"
};
}

string GetStatusRowClass(RequestStatus status)
{
return status switch
{
RequestStatus.Pending => "table-warning",
RequestStatus.Confirmed => "table-info",
RequestStatus.Completed => "table-success",
RequestStatus.Cancelled => "table-secondary",
_ => ""
};
}
}