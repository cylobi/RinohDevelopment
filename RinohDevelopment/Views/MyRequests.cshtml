@model List<RinohDevelopment.ViewModels.RecyclableRequestListItemViewModel>
@{
    ViewData["Title"] = "درخواست‌های من";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>درخواست‌های من</h2>
        <a asp-action="RequestRecyclablePickup" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> درخواست جدید
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mb-4">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mb-4">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="card shadow-sm">
            <div class="card-body text-center py-5">
                <i class="bi bi-inbox fs-1 text-muted mb-3"></i>
                <h5>شما هنوز درخواستی ثبت نکرده‌اید</h5>
                <p class="text-muted">برای درخواست جمع‌آوری بازیافت، بر روی دکمه «درخواست جدید» کلیک کنید.</p>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <div class="row">
                    <div class="col-md-2 fw-bold">تاریخ درخواست</div>
                    <div class="col-md-3 fw-bold">زمان جمع‌آوری</div>
                    <div class="col-md-2 fw-bold">وضعیت</div>
                    <div class="col-md-3 fw-bold">توضیحات</div>
                    <div class="col-md-2 fw-bold text-center">عملیات</div>
                </div>
            </div>
            <div class="card-body p-0">
                @foreach (var request in Model)
                {
                    <div class="row border-bottom p-3 @GetStatusRowClass(request.Status)">
                        <div class="col-md-2">@request.RequestDate.ToString("yyyy/MM/dd")</div>
                        <div class="col-md-3">@request.TimeDisplay</div>
                        <div class="col-md-2">
                            <span class="badge @GetStatusBadgeClass(request.Status)">@request.StatusDisplay</span>
                        </div>
                        <div class="col-md-3">
                            @(string.IsNullOrEmpty(request.Notes) ? "-" : request.Notes)
                        </div>
                        <div class="col-md-2 text-center">
                            @if (request.Status == RequestStatus.Pending)
                            {
                                <form asp-action="CancelRequest" method="post" style="display:inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@request.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger" 
                                            onclick="return confirm('آیا از لغو این درخواست اطمینان دارید؟');">
                                        <i class="bi bi-x-circle"></i> لغو
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(RequestStatus status)
    {
        return status switch
        {
            RequestStatus.Pending => "bg-warning",
            RequestStatus.Confirmed => "bg-info",
            RequestStatus.Completed => "bg-success",
            RequestStatus.Cancelled => "bg-secondary",
            _ => "bg-secondary"
        };
    }
    
    string GetStatusRowClass(RequestStatus status)
    {
        return status switch
        {
            RequestStatus.Pending => "bg-warning-subtle",
            RequestStatus.Confirmed => "bg-info-subtle",
            RequestStatus.Completed => "bg-success-subtle",
            RequestStatus.Cancelled => "bg-secondary-subtle",
            _ => ""
        };
    }
}