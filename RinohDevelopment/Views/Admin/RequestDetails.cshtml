@model RinohDevelopment.ViewModels.RecyclableRequestDetailViewModel
@{
ViewData["Title"] = "جزئیات درخواست بازیافت";
Layout = "_AdminLayout";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>جزئیات درخواست بازیافت</h2>
        <a asp-action="Requests" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-right"></i> بازگشت به لیست
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
    <div class="alert alert-success mb-4">
        @TempData["SuccessMessage"]
    </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
    <div class="alert alert-danger mb-4">
        @TempData["ErrorMessage"]
    </div>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">اطلاعات درخواست</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">شناسه درخواست:</label>
                        <div class="col-sm-8">@Model.Id</div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">تاریخ درخواست:</label>
                        <div class="col-sm-8">@Model.RequestDate.ToString("yyyy/MM/dd HH:mm")</div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">زمان جمع‌آوری:</label>
                        <div class="col-sm-8">
                            @Model.PickupDate.ToString("yyyy/MM/dd") -
                            @Model.PickupTimeStart.ToString(@"hh\:mm") تا @Model.PickupTimeEnd.ToString(@"hh\:mm")
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">وضعیت:</label>
                        <div class="col-sm-8">
                            <span class="badge @GetStatusBadgeClass(Model.Status)">@GetStatusText(Model.Status)</span>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">توضیحات:</label>
                        <div class="col-sm-8">
                            @(string.IsNullOrEmpty(Model.Notes) ? "بدون توضیحات" : Model.Notes)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">اطلاعات کاربر</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">نام و نام خانوادگی:</label>
                        <div class="col-sm-8">@Model.UserName</div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">شماره تماس:</label>
                        <div class="col-sm-8 direction-ltr">@Model.PhoneNumber</div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-4 fw-bold">آدرس:</label>
                        <div class="col-sm-8">@(string.IsNullOrEmpty(Model.Address) ? "آدرس ثبت نشده" : Model.Address)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.HasCollection)
    {
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">اطلاعات جمع‌آوری شده</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3 row">
                        <label class="col-sm-5 fw-bold">تاریخ جمع‌آوری:</label>
                        <div class="col-sm-7">@Model.CollectionDate?.ToString("yyyy/MM/dd HH:mm")</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3 row">
                        <label class="col-sm-5 fw-bold">وزن (کیلوگرم):</label>
                        <div class="col-sm-7">@Model.Weight.ToString()</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3 row">
                        <label class="col-sm-5 fw-bold">اعتبار افزوده شده:</label>
                        <div class="col-sm-7">@Model.CreditAssigned.ToString() میلی‌گرم طلا</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">عملیات</h5>
        </div>
        <div class="card-body">
            <div class="row">
                @if (Model.Status == RequestStatus.Pending)
                {
                <div class="col-auto">
                    <form asp-action="ConfirmRequest" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-primary mb-2">
                            <i class="bi bi-check-circle"></i> تایید درخواست
                        </button>
                    </form>
                </div>
                }

                @if (Model.Status == RequestStatus.Confirmed && !Model.HasCollection)
                {
                <div class="col-12">
                    <h6 class="mb-3">ثبت جمع‌آوری و افزایش اعتبار</h6>
                    <form asp-action="CompleteRequest" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="RequestId" value="@Model.Id" />
                        <div class="row g-3 align-items-center">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text">وزن (کیلوگرم)</span>
                                    <input type="number" class="form-control" name="Weight" required min="0.1" step="0.1" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text">اعتبار (میلی‌گرم طلا)</span>
                                    <input type="number" class="form-control" name="CreditAssigned" required min="0.1" step="0.1" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-check-all"></i> ثبت جمع‌آوری و افزایش اعتبار
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
                }

                @if (Model.Status == RequestStatus.Pending || Model.Status == RequestStatus.Confirmed)
                {
                <div class="col-auto mt-3">
                    <form asp-action="CancelRequest" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-danger"
                                onclick="return confirm('آیا از لغو این درخواست اطمینان دارید؟');">
                            <i class="bi bi-x-circle"></i> لغو درخواست
                        </button>
                    </form>
                </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
string GetStatusBadgeClass(RequestStatus status)
{
    return status switch
    {
        RequestStatus.Pending => "bg-warning",
        RequestStatus.Confirmed => "bg-info",
        RequestStatus.Completed => "bg-success",
        RequestStatus.Cancelled => "bg-secondary",
        _ => "bg-secondary"
    };
}

string GetStatusText(RequestStatus status)
{
    return status switch
    {
        RequestStatus.Pending => "در انتظار تایید",
        RequestStatus.Confirmed => "تایید شده",
        RequestStatus.Completed => "انجام شده",
        RequestStatus.Cancelled => "لغو شده",
        _ => ""
    };
}
}

<style>
    .direction-ltr {
        direction: ltr;
        text-align: left;
    }
</style>